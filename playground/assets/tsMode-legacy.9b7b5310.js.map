{"version":3,"file":"tsMode-legacy.9b7b5310.js","sources":["../../../node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  _modeId;\n  _defaults;\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  constructor(modeId, defaults) {\n    this._modeId = modeId;\n    this._defaults = defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._worker = monaco_editor_core_exports.editor.createWebWorker({\n        moduleId: \"vs/language/typescript/tsWorker\",\n        label: this._modeId,\n        keepIdleModels: true,\n        createData: {\n          compilerOptions: this._defaults.getCompilerOptions(),\n          extraLibs: this._defaults.getExtraLibs(),\n          customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n          inlayHintsOptions: this._defaults.inlayHintsOptions\n        }\n      });\n      let p = this._worker.getProxy();\n      if (this._defaults.getEagerModelSync()) {\n        p = p.then((worker) => {\n          if (this._worker) {\n            return this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n          }\n          return worker;\n        });\n      }\n      this._client = p;\n    }\n    return this._client;\n  }\n  getLanguageServiceWorker(...resources) {\n    let _client;\n    return this._getClient().then((client) => {\n      _client = client;\n    }).then((_) => {\n      if (this._worker) {\n        return this._worker.withSyncedResources(resources);\n      }\n    }).then((_) => _client);\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.esnext.string.d.ts\"] = true;\nlibFileSet[\"lib.esnext.weakref.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers?.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar OccurrencesAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getOccurrencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.map((entry) => {\n      return {\n        range: this._textSpanToRange(model, entry.textSpan),\n        kind: entry.isWriteAccess ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n      };\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const items = await worker.getNavigationBarItems(resource.toString());\n    if (!items || model.isDisposed()) {\n      return;\n    }\n    const convert = (bucket, item, containerLabel) => {\n      let result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: []\n      };\n      if (containerLabel)\n        result2.containerName = containerLabel;\n      if (item.childItems && item.childItems.length > 0) {\n        for (let child of item.childItems) {\n          convert(bucket, child, result2.name);\n        }\n      }\n      bucket.push(result2);\n    };\n    let result = [];\n    items.forEach((item) => convert(result, item));\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          edit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          edit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Other;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const client = new WorkerManager(modeId, defaults);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker));\n  monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker));\n  monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new OccurrencesAdapter(worker));\n  monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker));\n  monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker));\n  monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker));\n  monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker));\n  new DiagnosticsAdapter(libFiles, defaults, modeId, worker);\n  return worker;\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OccurrencesAdapter,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"names":["Promise","resolve","reject","javaScriptWorker","typeScriptWorker","defaults","setupMode","__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","monaco_editor_core_exports","target","module","copyDefault","desc","call","get","__reExport","monaco_editor_core_star","WorkerManager","constructor","modeId","this","_modeId","_defaults","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","async","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","p","getEagerModelSync","then","worker","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","_","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_defineProperty","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","_fetchLibFiles","w","getLibFiles","libFiles","DiagnosticsAdapter","exports","_selector","super","create","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","_listener","toString","onModelRemoved","_disposables","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","all","diagnostics","reduce","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","fetchLibFilesIfNecessary","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","triggerCharacters","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","_entry$kindModifiers","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","item","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","static","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","getSignatureHelpItems","triggerReason","_toSignatureHelpTriggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","getQuickInfoAtPosition","contents","textSpan","OccurrencesAdapter","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","DefinitionAdapter","getDefinitionAtPosition","refModel","ReferenceAdapter","getReferencesAtPosition","OutlineAdapter","getNavigationBarItems","convert","bucket","containerLabel","result2","outlineTypeTable","SymbolKind","spans","selectionRange","containerName","childItems","child","Method","const","localFunction","FormatHelper","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","startOffset","endOffset","edits","getFormattingEditsForRange","_convertOptions","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","title","description","RenameAdapter","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","hints","provideInlayHints","hint","_convertHintKind","InlayHintKind","Parameter","Type","Other","registerCompletionItemProvider","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","registerCodeActionProvider","registerRenameProvider","registerInlayHintsProvider"],"mappings":"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"}